{
	"info": {
		"_postman_id": "49db3543-d5fb-4247-84d7-ed1d0ff25997",
		"name": "Address Manager",
		"description": "Address Manager is a micro-service that stores and validates international address information.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Address",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1dbaab9-24ef-46b5-b0d1-ebb2ea58bc7d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Set `address` env var\", function () {",
							"    var json = pm.response.json();",
							"    ",
							"    pm.expect(json.id).to.not.eql(null);",
							"    pm.environment.set(\"address\", json.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"city\": \"Cupertino\",\n\t\"district\": \"California\",\n\t\"postalArea\": \"95014\",\n\t\"buildingName\": \"Apple Campus\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/v1/addresses/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"addresses",
						""
					]
				},
				"description": "Creates a new `Address` model.\n\nThe body of the request will be validated before it is saved to the database. If validation fails, a 400 (Bad Request) response will be returned and the model will not be saved.\n\n## Address\n\n| Key              | Type   | Description                                                  |\n| ---------------- | ------ | ------------------------------------------------------------ |\n| `buildingName`   | String | The name of the building that is located at the address      |\n| `type`           | String | P.O. Box, apartment, building, floor, etc.                   |\n| `typeIdentifier` | String | The value for the type. P.O Box number, floor number, etc.   |\n| `municipality`   | String | Refines the city name, for example, the hamlet or villiage name. |\n| `city`           | String | The city the address is in.                                  |\n| `district`       | String | The name of the state, province, government district, etc.   |\n| `postalArea`     | String | The zip code, postal code, etc. of the address.              |\n| `country`        | String | The country the address is in.                               |\n| `street`         | Street | The street information for the address                       |\n\n## Street\n\n| Key            | Type      | Description                                                  |\n| -------------- | --------- | ------------------------------------------------------------ |\n| `number`       | Int       | The street number.                                           |\n| `numberSuffix` | String    | The street number's suffix, i.e. `A`, `B`, etc.              |\n| `name`         | String    | The name of the street.                                      |\n| `type`         | String    | The street's type, i.e. `Dr.`, `Street`, `Loop`, `Pkwy`, etc. |\n| direction      | Direction | The compass point of the street, i.e. `N`, `E`, `S`, `W`, etc. |\n\n## Direction\n\n| Case | Description |\n| ---- | ----------- |\n| `N`  | North       |\n| `E`  | East        |\n| `S`  | South       |\n| `W`  | West        |\n| `NE` | North East  |\n| `NW` | North West  |\n| `SE` | South East  |\n| `SW` | South West  |\n\n"
			},
			"response": [
				{
					"name": "Create Address",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"city\": \"Cupertino\",\n\t\"district\": \"California\",\n\t\"postalArea\": \"95014\",\n\t\"buildingName\": \"Apple Campus\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/v1/addresses/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"addresses",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "content-type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "content-length",
							"value": "120"
						},
						{
							"key": "date",
							"value": "Mon, 11 Mar 2019 19:45:57 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"district\": \"California\",\n    \"id\": 1,\n    \"buildingName\": \"Apple Campus\",\n    \"postalArea\": \"95014\",\n    \"city\": \"Cupertino\",\n    \"street\": {\n        \"id\": 1\n    }\n}"
				}
			]
		},
		{
			"name": "Get Address",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "36b061d2-c46f-402d-a0d5-8ba3de27d390",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Address ID is equal to `address` var\", function () {",
							"    var json = pm.response.json();",
							"    var address = parseInt(pm.environment.get(\"address\"));",
							"    ",
							"    pm.expect(json.id).to.eql(address);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/v1/addresses/{{address}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"addresses",
						"{{address}}"
					]
				},
				"description": "Gets the `Address` model data for a given ID."
			},
			"response": [
				{
					"name": "Get Address",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/v1/addresses/{{address}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"addresses",
								"{{address}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "content-type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "content-length",
							"value": "120"
						},
						{
							"key": "date",
							"value": "Mon, 11 Mar 2019 19:46:12 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"district\": \"California\",\n    \"id\": 1,\n    \"buildingName\": \"Apple Campus\",\n    \"postalArea\": \"95014\",\n    \"city\": \"Cupertino\",\n    \"street\": {\n        \"id\": 1\n    }\n}"
				}
			]
		},
		{
			"name": "Updated Address",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a698dc01-04fa-4e6d-b886-690700f7a8a4",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Address ID is equal to `address` var\", function () {",
							"    var json = pm.response.json();",
							"    var address = parseInt(pm.environment.get(\"address\"));",
							"    ",
							"    pm.expect(json.id).to.eql(address);",
							"});",
							"",
							"pm.test(\"Address.country is equal to 'United States'\", function () {",
							"    var json = pm.response.json();",
							"    pm.expect(json.country).to.eql(\"United States\");",
							"});",
							"",
							"pm.test(\"Address.city is equal to 'Cupertino'\", function () {",
							"    var json = pm.response.json();",
							"    pm.expect(json.city).to.eql(\"Cupertino\");",
							"});",
							"",
							"pm.test(\"Address.street.name is equal to 'Infinite'\", function () {",
							"    var json = pm.response.json();",
							"    pm.expect(json.street.name).to.eql(\"Infinite\");",
							"});",
							"",
							"pm.test(\"Address.street.type is equal to 'Loop'\", function () {",
							"    var json = pm.response.json();",
							"    pm.expect(json.street.type).to.eql(\"Loop\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"country\": \"United States\",\n\t\"street\": {\n\t\t\"name\": \"Infinite\",\n\t\t\"type\": \"Loop\"\n\t}\n}"
				},
				"url": {
					"raw": "http://localhost:8080/v1/addresses/{{address}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"addresses",
						"{{address}}"
					]
				},
				"description": "Updates the properties of an `Address` model.\n\nThe request body passed in acts as the data for updating the model. If a property has a value, the saved model's column will be updated to that value. This means that if you pass in `null`, the property will be set to that value. Properties that are not defined will be ignored.\n\nWhen the model is updated, the new data will be validated. If validation fails, the update will not be saved."
			},
			"response": [
				{
					"name": "Updated Address",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"country\": \"United States\",\n\t\"street\": {\n\t\t\"name\": \"Infinite\",\n\t\t\"type\": \"Loop\"\n\t}\n}"
						},
						"url": {
							"raw": "http://localhost:8080/v1/addresses/{{address}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"addresses",
								"{{address}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "content-type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "content-length",
							"value": "178"
						},
						{
							"key": "date",
							"value": "Mon, 11 Mar 2019 19:46:30 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"district\": \"California\",\n    \"city\": \"Cupertino\",\n    \"country\": \"United States\",\n    \"id\": 1,\n    \"street\": {\n        \"id\": 1,\n        \"name\": \"Infinite\",\n        \"type\": \"Loop\"\n    },\n    \"buildingName\": \"Apple Campus\",\n    \"postalArea\": \"95014\"\n}"
				}
			]
		},
		{
			"name": "Delete Addresses",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3e82f537-71a3-496f-8b95-3a3c73b37c88",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/v1/addresses/{{address}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"addresses",
						"{{address}}"
					]
				},
				"description": "Deletes an existing `Address` model by ID."
			},
			"response": [
				{
					"name": "Delete Addresses",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/v1/addresses/{{address}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"addresses",
								"{{address}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "date",
							"value": "Mon, 11 Mar 2019 19:46:50 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Validate Address",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d4d6ab29-8b80-4229-8f21-eea09eb94d01",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"buildingName\": \"Apple Campus\",\n\t\"city\": \"Cupertino\",\n\t\"district\": \"California\",\n\t\"postalArea\": \"95014\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/v1/addresses/validate",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"addresses",
						"validate"
					]
				},
				"description": "Validates the address data without sotring it. A successfull validation will return a 200 (OK) response without a body."
			},
			"response": [
				{
					"name": "Validate Address",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"buildingName\": \"Apple Campus\",\n\t\"city\": \"Cupertino\",\n\t\"district\": \"California\",\n\t\"postalArea\": \"95014\"\n}"
						},
						"url": {
							"raw": "http://localhost:8084/v1/addresses/validate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8084",
							"path": [
								"v1",
								"addresses",
								"validate"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "content-length",
							"value": "0"
						},
						{
							"key": "date",
							"value": "Tue, 12 Mar 2019 20:55:20 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": null
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "676cbcfc-c5d9-4011-8d48-078d75582fa5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0914da2e-dab5-4875-88f0-b0a44a2d07a3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}